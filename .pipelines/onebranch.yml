#################################################################################
#                               OneBranch Pipelines                              #
# This pipeline was created by EasyStart from a sample located at:               #
#   https://aka.ms/obpipelines/easystart/samples                                  #
# Documentation:  https://aka.ms/obpipelines                                     #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                         #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                               #
# Support:        https://aka.ms/onebranchsup                                    #
#################################################################################

trigger:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - README.md
      - docs/*

parameters:
  - name: environment
    displayName: 'Deployment Environment'
    type: string
    default: 'dev'
    values:
      - dev
      - staging
      - prod

  - name: deployInfrastructure
    displayName: 'Deploy Infrastructure'
    type: boolean
    default: true

  - name: deployApplications
    displayName: 'Deploy Applications'
    type: boolean
    default: true

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)]
  system.debug: 'false'
  
  # Azure configuration
  azureServiceConnection: 'teams-ado-mcp-service-connection'
  azureSubscription: '$(AZURE_SUBSCRIPTION_ID)'
  resourceGroupName: 'rg-teams-ado-mcp-${{ parameters.environment }}'
  location: 'eastus'
  
  # Application configuration
  containerRegistryName: 'crteamsadomcp${{ parameters.environment }}'
  keyVaultName: 'kv-teams-ado-mcp-${{ parameters.environment }}'
  
  # OneBranch required variables
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2022/vse2022:latest'
  LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest'

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates
  parameters:
    featureFlags:
      WindowsHostVersion: '1ESWindows2022'
    
    globalSdl:
      # Baseline Security Development Lifecycle (SDL) configuration
      asyncSdl:
        enabled: true
        forStages: ['build', 'deploy']
        credscan:
          suppressionsFile: $(Build.SourcesDirectory)/.config/CredScanSuppressions.json
        binskim:
          break: true
        policheck:
          break: true
    
    stages:
      #################################################################################
      #                                BUILD STAGE                                   #
      #################################################################################
      - stage: build
        displayName: 'Build and Package'
        jobs:
          - template: .pipelines/templates/build-job.yml@self
            parameters:
              pool:
                type: linux
                isCustom: true
                name: Azure Pipelines
                vmImage: $(LinuxContainerImage)
              
      #################################################################################
      #                            INFRASTRUCTURE STAGE                              #
      #################################################################################
      - stage: infrastructure
        displayName: 'Deploy Infrastructure'
        condition: and(succeeded(), eq('${{ parameters.deployInfrastructure }}', true))
        dependsOn: build
        jobs:
          - template: .pipelines/templates/infrastructure-job.yml@self
            parameters:
              environment: ${{ parameters.environment }}
              pool:
                type: linux
                isCustom: true
                name: Azure Pipelines
                vmImage: $(LinuxContainerImage)
              
      #################################################################################
      #                             DEPLOYMENT STAGE                                 #
      #################################################################################
      - stage: deploy
        displayName: 'Deploy Applications'
        condition: and(succeeded(), eq('${{ parameters.deployApplications }}', true))
        dependsOn: 
          - build
          - infrastructure
        jobs:
          - template: .pipelines/templates/deploy-job.yml@self
            parameters:
              environment: ${{ parameters.environment }}
              pool:
                type: linux
                isCustom: true
                name: Azure Pipelines
                vmImage: $(LinuxContainerImage)
